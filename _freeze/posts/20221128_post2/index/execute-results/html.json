{
  "hash": "f36b47bfcdaf89b7fc2850e3e5bbbf09",
  "result": {
    "markdown": "---\ntitle: \"Let's Play a Game of Portfolio Selection\"\ndescription: \"Build your best portfolio.\"\nauthor: \"Uraz Akg√ºl\"\ndate: \"11/28/2022\"\ncategories: [Finance,English]\nimage: \"img.png\"\nexecute:\n  warning: false\n---\n\n\nThe following two goals are what I try to accomplish in the portfolio selection game series.\n\n* Coding as in every post.\n\n* Creating portfolio selection strategies through brainstorming.\n\nThe portfolios that we will use are as follows:\n\n* Picking stocks at random\n\n* Annualized Return-Risk ratio\n\n* BIST100 or Borsa Istanbul 100 Index (Benchmark)\n\n[BIST50 stocks](https://www.kap.org.tr/en/Endeksler) will be used and the data you can access by downloading the *post2.xlsx* file from [here](https://github.com/urazakgul/handsonrpy/tree/main/posts/data) is from Reuters.\n\n# R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(tibble)\nlibrary(ggplot2)\nlibrary(ggthemes)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbist50stocks <- read_excel(\"data.xlsx\")\nbist50stocks$DATE <- as.Date(bist50stocks$DATE)\n\nbist50stocks_20192021 <- bist50stocks %>%\nfilter(DATE < as.Date(\"2022-01-01\")) %>%\nmutate_at(\n    vars(-DATE), function(x) lag(lead(x)/x-1)\n) %>%\nna.omit()\n\nbist50stocks_2022 <- bist50stocks %>%\nfilter(DATE >= as.Date(\"2022-01-01\")) %>%\nmutate_at(\n    vars(-DATE), function(x) lag(lead(x)/x-1)\n) %>%\nna.omit()\n```\n:::\n\n\n* Random\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(34)\n\nrnd_stocks <- sample(\n    x = names(bist50stocks_20192021)[-c(1,ncol(bist50stocks_20192021))],\n    size = 8,\n    replace = FALSE\n)\n\nsort(rnd_stocks)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"BERA\"  \"BIMAS\" \"DOHOL\" \"KRDMD\" \"OTKAR\" \"SASA\"  \"TKFEN\" \"YKBNK\"\n```\n:::\n:::\n\n\n* Annualized Return-Risk Ratio\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrr_stocks <- bist50stocks_20192021 %>%\nselect(-BIST100) %>%\npivot_longer(!DATE, names_to = \"Var\", values_to = \"Val\") %>%\ngroup_by(Var) %>%\nsummarise(\n    \"Return\" = mean(Val) * 252,\n    \"Risk\" = sd(Val) * sqrt(252)\n) %>%\nungroup() %>%\nmutate(\n    \"Ratio\" = Return / Risk\n) %>%\narrange(desc(Ratio)) %>%\nslice(1:8) %>%\npull(Var)\n\nsort(rr_stocks)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"AKSA\"  \"ALARK\" \"EREGL\" \"GUBRF\" \"HEKTS\" \"SASA\"  \"TOASO\" \"TTRAK\"\n```\n:::\n:::\n\n\n* Which portfolio has the best returns?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1 <- bist50stocks_2022 %>%\nselect(DATE,rnd_stocks) %>%\nmutate(\n    \"Return_Random\" = 1 + rowMeans(.[,-1])\n) %>%\nselect(DATE,Return_Random)\n\ndf2 <- bist50stocks_2022 %>%\nselect(DATE,rr_stocks) %>%\nmutate(\n    \"Return_RR_Ratio\" = 1 + rowMeans(.[,-1])\n) %>%\nselect(DATE,Return_RR_Ratio)\n\ndf3 <- bist50stocks_2022 %>%\nselect(DATE,BIST100) %>%\nrename(\"Return_Benchmark\" = 2) %>%\nmutate(\n    Return_Benchmark = 1 + Return_Benchmark\n)\n\ndf_final <- df1 %>%\nleft_join(df2, by = \"DATE\") %>%\nleft_join(df3, by = \"DATE\") %>%\nmutate(\n    \"PL_Random\" = NA,\n    \"PL_RR_Ratio\" = NA,\n    \"PL_Benchmark\" = NA\n)\n\nfor(i in 1:nrow(df_final)){\n\n    for(j in 1:3){\n\n        if(i == 1){\n            df_final[i,(j+4)] <- 100*df_final[i,(j+1)]\n        } else {\n            df_final[i,(j+4)] <- df_final[(i-1),(j+4)] * df_final[i,(j+1)]\n        }\n\n    }\n\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_final %>%\nselect(DATE,PL_Random,PL_RR_Ratio,PL_Benchmark) %>%\npivot_longer(!DATE, names_to = \"Var\", values_to = \"Val\") %>%\nggplot(aes(x = DATE, y = Val, group = Var, color = Var)) +\ngeom_line(size = 1) +\ntheme_fivethirtyeight() +\ntheme(\n    legend.title = element_blank(),\n    legend.position = \"top\"\n) +\nscale_color_manual(values = c(\"red\",\"blue\",\"orange\")) +\nscale_x_date(date_labels = \"%Y-%m\", date_breaks = \"1 month\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n# Python\n\n\n::: {.cell}\n\n```{.python .cell-code}\n\nimport numpy as np\nimport pandas as pd\npd.options.mode.chained_assignment = None\nimport datetime as dt\nimport random\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nplt.style.use('fivethirtyeight')\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\n\nbist50stocks = pd.read_excel('data.xlsx')\nbist50stocks_20192021 = bist50stocks[bist50stocks['DATE'] < dt.datetime(2022,1,1)]\nbist50stocks_20192021 = bist50stocks_20192021.apply(\n    lambda x: (x.shift(-1) / x - 1).shift(1) if x.name not in ['DATE'] else x\n)\nbist50stocks_20192021 = bist50stocks_20192021.dropna(axis=0, how='any')\n\nbist50stocks_2022 = bist50stocks[bist50stocks['DATE'] >= dt.datetime(2022,1,1)]\nbist50stocks_2022 = bist50stocks_2022.apply(\n    lambda x: (x.shift(-1) / x - 1).shift(1) if x.name not in ['DATE'] else x\n)\nbist50stocks_2022 = bist50stocks_2022.dropna(axis=0, how='any')\n```\n:::\n\n\n* Random\n\n\n::: {.cell}\n\n```{.python .cell-code}\n\nrandom.seed(34)\n\nrem = {'DATE', 'BIST100'}\nrnd_list = [\n    elem for elem in list(bist50stocks_20192021.columns) if elem not in rem\n]\nrnd_stocks = random.sample(rnd_list,8)\nsorted(rnd_stocks)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n['AKSA', 'EREGL', 'KCHOL', 'KORDS', 'KOZAL', 'SISE', 'SOKM', 'TCELL']\n```\n:::\n:::\n\n\n* Annualized Return-Risk Ratio\n\n\n::: {.cell}\n\n```{.python .cell-code}\n\nrr_stocks = bist50stocks_20192021.drop(['DATE','BIST100'], axis=1)\nrr_stocks = rr_stocks.apply(\n    lambda x: pd.Series({'Return': x.mean() * 252, 'Risk': x.std() * np.sqrt(252)})\n).transpose()\nrr_stocks['Ratio'] = rr_stocks['Return'] / rr_stocks['Risk']\nrr_stocks = sorted(list(rr_stocks.sort_values('Ratio', ascending=False).index)[:8])\nrr_stocks\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n['AKSA', 'ALARK', 'EREGL', 'GUBRF', 'HEKTS', 'SASA', 'TOASO', 'TTRAK']\n```\n:::\n:::\n\n\n* Which portfolio has the best returns?\n\n\n::: {.cell}\n\n```{.python .cell-code}\n\ndf1 = bist50stocks_2022[\n    bist50stocks_2022.columns[\n        bist50stocks_2022.columns.isin(rnd_stocks)\n    ]\n]\ndf1['DATE'] = bist50stocks['DATE']\ndf1['Return_Random'] = 1 + df1.mean(axis=1,numeric_only=True)\ndf1 = df1[['DATE','Return_Random']]\n\ndf2 = bist50stocks_2022[\n    bist50stocks_2022.columns[\n        bist50stocks_2022.columns.isin(rr_stocks)\n    ]\n]\ndf2['DATE'] = bist50stocks['DATE']\ndf2['Return_RR_Ratio'] = 1 + df2.mean(axis=1,numeric_only=True)\ndf2 = df2[['DATE','Return_RR_Ratio']]\n\ndf3 = bist50stocks_2022[['DATE','BIST100']]\ndf3 = df3.rename(columns = {'BIST100':'Return_Benchmark'})\ndf3['Return_Benchmark'] = 1 + df3['Return_Benchmark']\n\ndf_final = pd.merge(\n    pd.merge(df1, df2, on='DATE'), df3, on='DATE'\n)\ndf_final[['PL_Random','PL_RR_Ratio','PL_Benchmark']] = np.nan\n\nfor i in range(len(df_final)):\n\n    for j in range(3):\n\n        if i == 0:\n\n            df_final.iloc[i,(j+4)] = 100 * df_final.iloc[i,(j+1)]\n\n        else:\n\n            df_final.iloc[i,(j+4)] = df_final.iloc[(i-1),(j+4)] * df_final.iloc[i,(j+1)]\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\n\ndf_final = pd.melt(\n    df_final,\n    id_vars = 'DATE',\n    value_vars = ['PL_Random','PL_RR_Ratio','PL_Benchmark']\n)\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\n\nfig, ax = plt.subplots(figsize=(12,8))\n\ng = sns.lineplot(\n    x = 'DATE',\n    y = 'value',\n    hue = 'variable',\n    data = df_final\n)\ng.legend_.set_title(None)\ng.set(xlabel=None)\ng.set(ylabel=None)\nfig.autofmt_xdate(rotation = 0)\n\nplt.show()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=1152}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}